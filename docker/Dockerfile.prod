# This Dockerfile was inspired by the kedro-docker template: 
# https://github.com/quantumblacklabs/kedro-docker/blob/main/kedro_docker/template/Dockerfile.simple
# Build the image with:
# docker build --build-arg PYPI_INDEX_URL=<index_url> -f ./Dockerfile.prod -t <image_name>:<image_tag> .
ARG VARIANT=3.10-bullseye
FROM python:${VARIANT}

# install project requirements
ARG PYPI_INDEX_URL

COPY src/requirements.txt /tmp/requirements.txt
RUN pip install -r /tmp/requirements.txt --index-url=$PYPI_INDEX_URL && rm -f /tmp/requirements.txt

# add kedro user
ARG KEDRO_UID=999
ARG KEDRO_GID=1000
RUN groupadd -f -g ${KEDRO_GID} kedro_group && \
useradd -d /home/kedro -s /bin/bash -g ${KEDRO_GID} -u ${KEDRO_UID} kedro

# Required for the SQLQueryDataSet
# RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
#    && apt-get install -y unixodbc-dev g++ \
#    && apt-get update && export DEBIAN_FRONTEND=noninteractive \
#    && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
#    && curl https://packages.microsoft.com/config/debian/11/prod.list > /etc/apt/sources.list.d/mssql-release.list \
#    && apt-get update \
#    && ACCEPT_EULA=Y apt-get install -y msodbcsql17 \
#    && echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc \
#    && apt-get clean -y && rm -rf /var/lib/apt/lists/*

# copy the whole project except what is in .dockerignore
WORKDIR /home/kedro
COPY . .
RUN chown -R kedro:${KEDRO_GID} /home/kedro
USER kedro
RUN chmod -R a+w /home/kedro

EXPOSE 8888

# ENTRYPOINT ["bash"]

# The ENTRYPOINT specifies a command that will always be executed when the container starts
# The CMD specifies arguments that will be fed to the ENTRYPOINT.
ENTRYPOINT ["kedro"]
CMD ["test"]
